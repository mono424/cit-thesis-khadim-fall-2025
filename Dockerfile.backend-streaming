# Use Python 3.12 slim image as base
FROM python:3.12-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    curl \
    ca-certificates \
    pkg-config \
    libeigen3-dev \
    libopencv-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libavutil-dev \
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev \
    libgstreamer-plugins-bad1.0-dev \
    gstreamer1.0-plugins-base \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav \
    gstreamer1.0-tools \
    gstreamer1.0-x \
    gstreamer1.0-alsa \
    gstreamer1.0-gl \
    gstreamer1.0-gtk3 \
    gstreamer1.0-qt5 \
    gstreamer1.0-pulseaudio \
    python3-pybind11 \
    && rm -rf /var/lib/apt/lists/*

# Copy workspace files (from repo root)
COPY packages/pyxylt /app/packages/pyxylt
COPY packages/pyzdepth /app/packages/pyzdepth

# Copy backend-streaming app files
COPY apps/backend-streaming /app/apps/backend-streaming/

# Set working directory to backend-streaming
WORKDIR /app/apps/backend-streaming

# Install uv (fast Python package manager)
RUN curl -LsSf https://astral.sh/uv/install.sh | sh -s \
    && ln -s /root/.local/bin/uv /usr/local/bin/uv

# Install pybind11 for building pyxylt
RUN uv pip install --system --no-cache pybind11

# Build pyxylt from source for Linux
WORKDIR /app/packages/pyxylt
RUN mkdir -p build && cd build && \
    cmake .. && \
    make -j$(nproc) && \
    cp pyxylt*.so ../xylt/ && \
    rm -rf build

# Install workspace packages first (to satisfy app dependencies)
WORKDIR /app/apps/backend-streaming
RUN uv pip install --system --no-cache -e ../../packages/pyxylt -e ../../packages/pyzdepth

# Temporarily remove workspace sources to avoid uv conflicts
RUN sed -i '/\[tool.uv.sources\]/,/^\[/ { /^\[/!d; }' pyproject.toml

# Install backend-streaming dependencies without workspace sources
RUN uv pip install --system --no-cache --no-deps -e . \
    && uv pip install --system --no-cache opencv-python~=4.10.0.84 eclipse-zenoh==1.5.0 pydantic PySide6 qasync wgpu numpy av Pillow pycdr2 rich websockets aiohttp aiortc rendercanvas pybind11

# pyzdepth extension is already built during package installation above

# Expose port (adjust as needed for your application)
EXPOSE 8093

# Set environment variables
ENV PYTHONPATH=/app/apps/backend-streaming/src
ENV PYTHONUNBUFFERED=1

# Default command
CMD ["python", "run.py"]
