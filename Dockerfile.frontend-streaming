# Multi-stage build for frontend-streaming
FROM node:20-alpine AS base

# Install pnpm
RUN npm install -g pnpm

# Set working directory
WORKDIR /app

# Copy workspace files (from repo root)
COPY packages/shared /app/packages/shared
COPY package.json /app/package.json
COPY pnpm-workspace.yaml /app/pnpm-workspace.yaml
COPY pnpm-lock.yaml /app/pnpm-lock.yaml

# Copy frontend-streaming app files
COPY apps/frontend-streaming /app/apps/frontend-streaming/

# Install dependencies
WORKDIR /app
RUN pnpm install --frozen-lockfile

# Build shared package
WORKDIR /app/packages/shared
RUN pnpm build

# Build frontend-streaming app
WORKDIR /app/apps/frontend-streaming
RUN pnpm build

# Production stage
FROM nginx:alpine AS production

# Copy built files to nginx
COPY --from=base /app/apps/frontend-streaming/dist /usr/share/nginx/html

# Copy custom nginx configuration
COPY apps/frontend-streaming/nginx.conf /etc/nginx/nginx.conf

# Expose port 8092
EXPOSE 8092

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
